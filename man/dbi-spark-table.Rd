% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dbi_spark_table.R
\docType{methods}
\name{dbi-spark-table}
\alias{dbExistsTable,DBISparkConnection,character-method}
\alias{dbListTables,DBISparkConnection-method}
\alias{dbReadTable,DBISparkConnection,character-method}
\alias{dbRemoveTable,DBISparkConnection,character-method}
\alias{dbWriteTable,DBISparkConnection-method}
\alias{dbi-spark-table}
\alias{mutate_.tbl_spark}
\title{DBI Spark Table}
\usage{
\S4method{dbWriteTable}{DBISparkConnection}(conn, name, value,
  temporary = TRUE)

\S4method{dbReadTable}{DBISparkConnection,character}(conn, name)

\S4method{dbListTables}{DBISparkConnection}(conn)

\S4method{dbExistsTable}{DBISparkConnection,character}(conn, name)

\S4method{dbRemoveTable}{DBISparkConnection,character}(conn, name)

\method{mutate_}{tbl_spark}(.data, ..., .dots)
}
\arguments{
\item{conn}{a \code{\linkS4class{DBISparkConnection}} object, produced by
\code{\link[DBI]{dbConnect}}}

\item{name}{a character string specifying a table name.}

\item{value}{A data.frame to write to the database.}

\item{temporary}{If \code{TRUE}, will generate a temporary table statement.}

\item{...}{Other arguments used by individual methods.}

\item{overwrite}{a logical specifying whether to overwrite an existing table
or not. Its default is \code{FALSE}.}

\item{append}{data to table. Its default is \code{FALSE}.}

\item{field.types}{character vector of named SQL field types where
the names are the names of new table's columns. If missing, types inferred
with \code{\link[DBI]{dbDataType}}).}

\item{Not}{supported.}
}
\description{
DBI Spark Table
}
\examples{
\dontrun{
con <- dbConnect(spark::DBISpark())

setup_local()
dbListTables(con)
dbWriteTable(con, "mtcars", mtcars, temporary = TRUE)
dbReadTable(con, "mtcars")

dbListTables(con)
dbExistsTable(con, "mtcars")

# A zero row data frame just creates a table definition.
dbWriteTable(con, "mtcars2", mtcars[0, ], temporary = TRUE)
dbReadTable(con, "mtcars2")

dbDisconnect(con)
}
}

