% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dbi_spark_table.R
\docType{methods}
\name{dbi-spark-table}
\alias{dbExistsTable,DBISparkConnection,character-method}
\alias{dbListTables,DBISparkConnection-method}
\alias{dbReadTable,DBISparkConnection,character-method}
\alias{dbRemoveTable,DBISparkConnection,character-method}
\alias{dbWriteTable,DBISparkConnection-method}
\alias{dbi-spark-table}
\title{DBI Spark Table}
\usage{
\S4method{dbWriteTable}{DBISparkConnection}(conn, name, value)

\S4method{dbReadTable}{DBISparkConnection,character}(conn, name,
  row.names = NA)

\S4method{dbListTables}{DBISparkConnection}(conn)

\S4method{dbExistsTable}{DBISparkConnection,character}(conn, name)

\S4method{dbRemoveTable}{DBISparkConnection,character}(conn, name)
}
\arguments{
\item{conn}{a \code{\linkS4class{DBISparkConnection}} object, produced by
\code{\link[DBI]{dbConnect}}}

\item{name}{a character string specifying a table name.}

\item{value}{A data.frame to write to the database.}

\item{row.names}{Either \code{TRUE}, \code{FALSE}, \code{NA} or a string.

  If \code{TRUE}, always translate row names to a column called "row_names".
  If \code{FALSE}, never translate row names. If \code{NA}, translate
  rownames only if they're a character vector.

  A string is equivalent to \code{TRUE}, but allows you to override the
  default name.

  For backward compatibility, \code{NULL} is equivalent to \code{FALSE}.}

\item{overwrite}{a logical specifying whether to overwrite an existing table
or not. Its default is \code{FALSE}.}

\item{append}{data to table. Its default is \code{FALSE}.}

\item{field.types}{character vector of named SQL field types where
the names are the names of new table's columns. If missing, types inferred
with \code{\link[DBI]{dbDataType}}).}

\item{Not}{supported.}
}
\description{
DBI Spark Table
}
\examples{
library(DBI)
con <- dbConnect(splyr::DBISpark())
dbListTables(con)
dbWriteTable(con, "mtcars", mtcars, temporary = TRUE)
dbReadTable(con, "mtcars")

dbListTables(con)
dbExistsTable(con, "mtcars")

# A zero row data frame just creates a table definition.
dbWriteTable(con, "mtcars2", mtcars[0, ], temporary = TRUE)
dbReadTable(con, "mtcars2")

dbDisconnect(con)
}

