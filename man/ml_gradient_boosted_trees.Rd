% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ml_gradient_boosted_tree.R
\name{ml_gradient_boosted_trees}
\alias{ml_gradient_boosted_trees}
\title{Spark ML -- Gradient-Boosted Tree}
\usage{
ml_gradient_boosted_trees(x, response, features, max.bins = 32L,
  max.depth = 5L, type = c("auto", "regression", "classification"))
}
\arguments{
\item{x}{An object convertable to a Spark DataFrame (typically, a \code{tbl_spark}).}

\item{response}{The name of the response vector.}

\item{features}{The names of features (terms) included in the model.}

\item{max.bins}{The maximum number of bins used for discretizing
continuous features and for choosing how to split on features at
each node. More bins give higher granularity.}

\item{max.depth}{Maximum depth of the tree (>= 0); that is, the maximum
number of nodes separating any leaves from the root of the tree.}

\item{type}{The type of model to fit. \code{"regression"} treats the response
as a continuous variable, while \code{"classification"} treats the response
as a categorical variable. When \code{"auto"} is used, the model type is
inferred based on the response variable type -- if it is a numeric type,
then regression is used; classification otherwise.}
}
\description{
Perform regression or classification using gradient-boosted trees.
}
\seealso{
Other Spark ML routines: \code{\link{ml_decision_tree}},
  \code{\link{ml_kmeans}}, \code{\link{ml_lda}},
  \code{\link{ml_linear_regression}},
  \code{\link{ml_logistic_regression}},
  \code{\link{ml_multilayer_perceptron}},
  \code{\link{ml_naive_bayes}},
  \code{\link{ml_one_vs_rest}}, \code{\link{ml_pca}},
  \code{\link{ml_random_forest}},
  \code{\link{ml_survival_regression}}
}

